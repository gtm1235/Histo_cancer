{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Creating a custom CNN for detection of cancer from histology specimens."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##first imports for torch, torchvision, numpy, pandas, and os"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import torch\n",
    "import torch\n",
    "import torch.nn.functional as F\n",
    "from torch import nn\n",
    "from torch import optim\n",
    "from torchvision import datasets, transforms, models\n",
    "from torch.utils.data.sampler import SubsetRandomSampler\n",
    "\n",
    "%matplotlib inline\n",
    "%config InlineBackend.figure_format = 'retina'\n",
    "import PIL\n",
    "import matplotlib as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import shutil"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "cuda is available\n"
     ]
    }
   ],
   "source": [
    "#Set up for cuda usage\n",
    "device = torch.device(\"cuda\" if torch.cuda.is_available else \"cpu\")\n",
    "print(\"{} is available\".format(device))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Below I seprate the training set into sperate train and validation folders -- I left it up to the user to place directories and creat the 0 and 1 subfolders because of different "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Reorganizing data to subfolders zero and one for pytorch labels implementation as well as seperate into valid folders sperately \n",
    "# to seperate image augmentation transforms and validation transforms\n",
    "\n",
    "labels = pd.read_csv(r'''C:\\Users\\gtm12\\OneDrive\\Documents\\Jupyter Notebooks\\Kaggle\\Histo_cancer\\train_labels.csv''')\n",
    "\n",
    "training_path = r'''C:\\Users\\gtm12\\OneDrive\\Documents\\Jupyter Notebooks\\Kaggle\\Histo_cancer\\histo_data\\train\\\\'''\n",
    "train_path_0 = r'''C:\\Users\\gtm12\\OneDrive\\Documents\\Jupyter Notebooks\\Kaggle\\Histo_cancer\\histo_data\\train\\0\\\\'''\n",
    "train_path_1 = r'''C:\\Users\\gtm12\\OneDrive\\Documents\\Jupyter Notebooks\\Kaggle\\Histo_cancer\\histo_data\\train\\1\\\\'''\n",
    "valid_path_0 = r'''C:\\Users\\gtm12\\OneDrive\\Documents\\Jupyter Notebooks\\Kaggle\\Histo_cancer\\histo_data\\valid\\0\\\\'''\n",
    "valid_path_1 = r'''C:\\Users\\gtm12\\OneDrive\\Documents\\Jupyter Notebooks\\Kaggle\\Histo_cancer\\histo_data\\valid\\1\\\\'''\n",
    "\n",
    "percent_valid = .15\n",
    "\n",
    "\n",
    "def file_valid_split_copy_delete(training_path, train_path_0, train_path_1, valid_path_0, valid_path_1, percent_valid):\n",
    "    counter_0 = 0\n",
    "    counter_1 = 0\n",
    "\n",
    "    for i in range(len(labels)):\n",
    "        if labels.label[i] == 0:\n",
    "            counter_false +=1\n",
    "        if labels.label[i] == 1:\n",
    "            counter_true +=1\n",
    "\n",
    "    train_split_0 = int(percent_valid * counter_false)\n",
    "    train_split_1 = int(percent_valid * counter_true)\n",
    "\n",
    "    for i in range(len(labels)):\n",
    "        file_name = str(labels.id[i]) + '.tif'\n",
    "        if labels.label[i].item() == 0:\n",
    "            if counter_0 <= train_split_0:\n",
    "                file_path_copy = valid_path_0\n",
    "                counter_0 += 1\n",
    "                file_origin = training_path + file_name\n",
    "                file_path_copy = file_path_copy + file_name\n",
    "                shutil.copy2(file_origin, file_path_copy)\n",
    "                os.remove(file_origin)\n",
    "            else:\n",
    "                file_path_copy = train_path_0\n",
    "                counter_0 += 1\n",
    "                file_origin = training_path + file_name\n",
    "                file_path_copy = file_path_copy + file_name\n",
    "                shutil.copy2(file_origin, file_path_copy)\n",
    "                os.remove(file_origin)\n",
    "\n",
    "        elif labels.label[i].item() == 1:\n",
    "            if counter_1 <= trains_split_1:\n",
    "                file_path_copy = valid_path_1\n",
    "                counter_1 += 1\n",
    "                file_origin = training_path + file_name\n",
    "                file_path_copy = file_path_copy + file_name\n",
    "                shutil.copy2(file_origin, file_path_copy)\n",
    "                os.remove(file_origin)\n",
    "            else:\n",
    "                file_path_copy = train_path_1\n",
    "                counter_0 += 1\n",
    "                file_origin = training_path + file_name\n",
    "                file_path_copy = file_path_copy + file_name\n",
    "                shutil.copy2(file_origin, file_path_copy)\n",
    "                os.remove(file_origin)\n",
    "                \n",
    "    print(\"files have been relocated\")\n",
    "    \n",
    "    return"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "file_valid_split_copy_delete(training_path, train_path_0, train_path_1, valid_path_0, valid_path_1, percent_valid)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Begin to load Data Transforms and split validation set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# number of subprocesses to use for data loading\n",
    "num_workers = 0\n",
    "# how many samples per batch to load\n",
    "\n",
    "# percentage of training set to use as validation\n",
    "valid_size = 0.15\n",
    "#file directories\n",
    "data_dir =  r'''C:\\Users\\gtm12\\OneDrive\\Documents\\Jupyter Notebooks\\Kaggle\\Histo_cancer\\histo_data\\\\'''\n",
    "train_dir = data_dir + 'train\\\\'\n",
    "valid_dir = data_dir + 'valid\\\\'\n",
    "test_dir = data_dir + 'test\\\\'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# TODO: Define your transforms for the training and validation sets\n",
    "train_transforms = transforms.Compose([transforms.CenterCrop(32),\n",
    "                                      transforms.ToTensor(),\n",
    "                                      transforms.Normalize([0.485, 0.456, 0.406],\n",
    "                                                          [0.229, 0.224, 0.225])])\n",
    "\n",
    "valid_transforms = transforms.Compose([transforms.CenterCrop(32),\n",
    "                                      transforms.ToTensor(),\n",
    "                                      transforms.Normalize([0.485, 0.456, 0.406],\n",
    "                                                          [0.229, 0.224, 0.225])])\n",
    "\n",
    "#test_transforms = transforms.Compose([transforms.CenterCrop(32),\n",
    "#                                      transforms.ToTensor(),\n",
    "#                                      transforms.Normalize([0.485, 0.456, 0.406],\n",
    "#                                                          [0.229, 0.224, 0.225])])\n",
    "\n",
    "\n",
    "\n",
    "# TODO: Load the datasets with ImageFolder\n",
    "train_data = datasets.ImageFolder(train_dir, transform=train_transforms)\n",
    "valid_data = datasets.ImageFolder(valid_dir, transform=valid_transforms)\n",
    "#test_data = datasets.ImageFolder(test_dir, transform=test_transforms)\n",
    "\n",
    "\n",
    "# TODO: Using the image datasets and the trainforms, define the dataloaders\n",
    "#trainloader = torch.utils.data.DataLoader(train_data, batch_size=64, shuffle=True)\n",
    "#validloader = torch.utils.data.DataLoader(valid_data, batch_size=64, shuffle=True)\n",
    "# prepare data loaders (combine dataset and sampler)\n",
    "train_loader = torch.utils.data.DataLoader(train_data, batch_size=256, shuffle=True)\n",
    "valid_loader = torch.utils.data.DataLoader(valid_data, batch_size=256, shuffle=True)\n",
    "#test_loader = torch.utils.data.DataLoader(test_data, batch_size=batch_size, \n",
    "#    num_workers=num_workers)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Visualize data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# helper function to un-normalize and display an image\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "def imshow(img):\n",
    "    img = .224*img + .456  # unnormalize\n",
    "    plt.imshow(np.transpose(img, (1, 2, 0)))  # convert from Tensor image"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1800x288 with 20 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 249,
       "width": 1393
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# obtain one batch of training images\n",
    "dataiter = iter(train_loader)\n",
    "images, labels = dataiter.next()\n",
    "images = images.numpy() # convert images to numpy for display\n",
    "# plot the images in the batch, along with the corresponding labels\n",
    "fig = plt.figure(figsize=(25, 4))\n",
    "# display 20 images\n",
    "for idx in np.arange(20):\n",
    "    ax = fig.add_subplot(2, 10, idx+1, xticks=[], yticks=[])\n",
    "    imshow(images[idx])\n",
    "    ax.set_title(labels[idx].item())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
      "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1800x288 with 20 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 249,
       "width": 1393
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# obtain one batch of training images\n",
    "dataiter = iter(valid_loader)\n",
    "images, labels = dataiter.next()\n",
    "images = images.numpy() # convert images to numpy for display\n",
    "# plot the images in the batch, along with the corresponding labels\n",
    "fig = plt.figure(figsize=(25, 4))\n",
    "# display 20 images\n",
    "for idx in np.arange(20):\n",
    "    ax = fig.add_subplot(2, 10, idx+1, xticks=[], yticks=[])\n",
    "    imshow(images[idx])\n",
    "    ax.set_title(labels[idx].item())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##Time to define our CNN model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Net(\n",
      "  (conv1): Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))\n",
      "  (conv2): Conv2d(6, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
      "  (conv3): Conv2d(9, 16, kernel_size=(2, 2), stride=(1, 1))\n",
      "  (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
      "  (hidden_1): Linear(in_features=144, out_features=144, bias=True)\n",
      "  (hidden_2): Linear(in_features=144, out_features=72, bias=True)\n",
      "  (hidden_3): Linear(in_features=72, out_features=2, bias=True)\n",
      "  (dropout): Dropout(p=0.2)\n",
      ")\n"
     ]
    }
   ],
   "source": [
    "# define the CNN architecture\n",
    "class Net(nn.Module):\n",
    "    def __init__(self):\n",
    "        super(Net, self).__init__()\n",
    "        # convolutional layer\n",
    "        self.conv1 = nn.Conv2d(3, 6, 5, padding = 2)\n",
    "        self.conv2 = nn.Conv2d(6, 9, 3, padding = 1)\n",
    "        self.conv3 = nn.Conv2d(9, 16, 2)\n",
    "        # max pooling layer\n",
    "        self.pool = nn.MaxPool2d(2, 2)\n",
    "        #FC Layers\n",
    "        self.hidden_1 = nn.Linear(144, 144)\n",
    "        self.hidden_2 = nn.Linear(144, 72)\n",
    "        self.hidden_3 = nn.Linear(72, 2)\n",
    "        self.dropout = nn.Dropout(p=0.2)\n",
    "        \n",
    "\n",
    "    def forward(self, x):\n",
    "        # add sequence of convolutional and max pooling layers\n",
    "        x = self.pool(F.relu(self.conv1(x)))\n",
    "        x = self.pool(F.relu(self.conv2(x)))\n",
    "        x = self.pool(F.relu(self.conv3(x)))\n",
    "        x = x.view(x.shape[0], -1)\n",
    "        #print(x.shape)\n",
    "        x = F.relu(self.hidden_1(x))\n",
    "        x = self.dropout(x)\n",
    "        x = F.relu(self.hidden_2(x))\n",
    "        x = self.dropout(x)\n",
    "        x = F.log_softmax(self.hidden_3(x), dim=1)\n",
    "        \n",
    "        \n",
    "        return x\n",
    "\n",
    "# create a complete CNN\n",
    "model = Net()\n",
    "for param in model.parameters():\n",
    "  param.requires_grad = True\n",
    "print(model)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##Add Optimizer and Loss finctions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "# specify loss function\n",
    "criterion = nn.NLLLoss()\n",
    "\n",
    "# specify optimizer\n",
    "optimizer = optim.Adam(model.parameters(), lr=.01)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#Training Loop"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch: 1 \tTraining Loss: 0.582270 \tValidation Loss: 0.512428 \t accuracy: 0.763 \t accuracy2: 0.826\n",
      "Validation loss decreased (inf --> 0.512428).  Saving model ...\n",
      "Epoch: 1 \tTraining Loss: 0.526302 \tValidation Loss: 0.516205 \t accuracy: 0.758 \t accuracy2: 0.663\n",
      "Epoch: 1 \tTraining Loss: 0.519064 \tValidation Loss: 0.561143 \t accuracy: 0.739 \t accuracy2: 0.849\n",
      "Epoch: 1 \tTraining Loss: 0.507852 \tValidation Loss: 0.510362 \t accuracy: 0.767 \t accuracy2: 0.756\n",
      "Validation loss decreased (0.512428 --> 0.510362).  Saving model ...\n",
      "Epoch: 1 \tTraining Loss: 0.510125 \tValidation Loss: 0.503395 \t accuracy: 0.769 \t accuracy2: 0.814\n",
      "Validation loss decreased (0.510362 --> 0.503395).  Saving model ...\n",
      "Epoch: 1 \tTraining Loss: 0.520377 \tValidation Loss: 0.503025 \t accuracy: 0.772 \t accuracy2: 0.756\n",
      "Validation loss decreased (0.503395 --> 0.503025).  Saving model ...\n",
      "Epoch: 1 \tTraining Loss: 0.501245 \tValidation Loss: 0.493833 \t accuracy: 0.773 \t accuracy2: 0.733\n",
      "Validation loss decreased (0.503025 --> 0.493833).  Saving model ...\n",
      "Epoch: 1 \tTraining Loss: 0.498590 \tValidation Loss: 0.491287 \t accuracy: 0.775 \t accuracy2: 0.837\n",
      "Validation loss decreased (0.493833 --> 0.491287).  Saving model ...\n",
      "Epoch: 1 \tTraining Loss: 0.498738 \tValidation Loss: 0.500794 \t accuracy: 0.776 \t accuracy2: 0.733\n",
      "Epoch: 1 \tTraining Loss: 0.496620 \tValidation Loss: 0.483289 \t accuracy: 0.782 \t accuracy2: 0.674\n",
      "Validation loss decreased (0.491287 --> 0.483289).  Saving model ...\n",
      "Epoch: 1 \tTraining Loss: 0.499134 \tValidation Loss: 0.486502 \t accuracy: 0.779 \t accuracy2: 0.849\n",
      "Epoch: 1 \tTraining Loss: 0.478978 \tValidation Loss: 0.494102 \t accuracy: 0.778 \t accuracy2: 0.791\n",
      "Epoch: 1 \tTraining Loss: 0.494250 \tValidation Loss: 0.490815 \t accuracy: 0.780 \t accuracy2: 0.802\n",
      "Epoch: 1 \tTraining Loss: 0.494760 \tValidation Loss: 0.485077 \t accuracy: 0.779 \t accuracy2: 0.837\n",
      "Epoch: 1 \tTraining Loss: 0.483635 \tValidation Loss: 0.481154 \t accuracy: 0.784 \t accuracy2: 0.767\n",
      "Validation loss decreased (0.483289 --> 0.481154).  Saving model ...\n",
      "Epoch: 2 \tTraining Loss: 0.252115 \tValidation Loss: 0.486563 \t accuracy: 0.777 \t accuracy2: 0.733\n",
      "Epoch: 2 \tTraining Loss: 0.473289 \tValidation Loss: 0.465756 \t accuracy: 0.793 \t accuracy2: 0.802\n",
      "Validation loss decreased (0.481154 --> 0.465756).  Saving model ...\n",
      "Epoch: 2 \tTraining Loss: 0.484947 \tValidation Loss: 0.466700 \t accuracy: 0.792 \t accuracy2: 0.779\n",
      "Epoch: 2 \tTraining Loss: 0.484790 \tValidation Loss: 0.460560 \t accuracy: 0.795 \t accuracy2: 0.791\n",
      "Validation loss decreased (0.465756 --> 0.460560).  Saving model ...\n",
      "Epoch: 2 \tTraining Loss: 0.469940 \tValidation Loss: 0.458108 \t accuracy: 0.795 \t accuracy2: 0.791\n",
      "Validation loss decreased (0.460560 --> 0.458108).  Saving model ...\n",
      "Epoch: 2 \tTraining Loss: 0.467281 \tValidation Loss: 0.457415 \t accuracy: 0.799 \t accuracy2: 0.814\n",
      "Validation loss decreased (0.458108 --> 0.457415).  Saving model ...\n",
      "Epoch: 2 \tTraining Loss: 0.488984 \tValidation Loss: 0.465693 \t accuracy: 0.790 \t accuracy2: 0.756\n",
      "Epoch: 2 \tTraining Loss: 0.472426 \tValidation Loss: 0.474401 \t accuracy: 0.783 \t accuracy2: 0.767\n",
      "Epoch: 2 \tTraining Loss: 0.462271 \tValidation Loss: 0.447278 \t accuracy: 0.802 \t accuracy2: 0.756\n",
      "Validation loss decreased (0.457415 --> 0.447278).  Saving model ...\n",
      "Epoch: 2 \tTraining Loss: 0.463741 \tValidation Loss: 0.450308 \t accuracy: 0.799 \t accuracy2: 0.767\n",
      "Epoch: 2 \tTraining Loss: 0.466384 \tValidation Loss: 0.469822 \t accuracy: 0.795 \t accuracy2: 0.767\n",
      "Epoch: 2 \tTraining Loss: 0.454567 \tValidation Loss: 0.464406 \t accuracy: 0.799 \t accuracy2: 0.837\n",
      "Epoch: 2 \tTraining Loss: 0.452645 \tValidation Loss: 0.458280 \t accuracy: 0.802 \t accuracy2: 0.826\n",
      "Epoch: 2 \tTraining Loss: 0.451480 \tValidation Loss: 0.459411 \t accuracy: 0.794 \t accuracy2: 0.814\n",
      "Epoch: 2 \tTraining Loss: 0.466548 \tValidation Loss: 0.443874 \t accuracy: 0.805 \t accuracy2: 0.895\n",
      "Validation loss decreased (0.447278 --> 0.443874).  Saving model ...\n",
      "Epoch: 3 \tTraining Loss: 0.019420 \tValidation Loss: 0.453106 \t accuracy: 0.793 \t accuracy2: 0.767\n",
      "Epoch: 3 \tTraining Loss: 0.436745 \tValidation Loss: 0.499013 \t accuracy: 0.774 \t accuracy2: 0.814\n",
      "Epoch: 3 \tTraining Loss: 0.463787 \tValidation Loss: 0.447509 \t accuracy: 0.801 \t accuracy2: 0.721\n",
      "Epoch: 3 \tTraining Loss: 0.451486 \tValidation Loss: 0.443766 \t accuracy: 0.802 \t accuracy2: 0.767\n",
      "Validation loss decreased (0.443874 --> 0.443766).  Saving model ...\n",
      "Epoch: 3 \tTraining Loss: 0.443613 \tValidation Loss: 0.438671 \t accuracy: 0.806 \t accuracy2: 0.814\n",
      "Validation loss decreased (0.443766 --> 0.438671).  Saving model ...\n",
      "Epoch: 3 \tTraining Loss: 0.453822 \tValidation Loss: 0.466276 \t accuracy: 0.790 \t accuracy2: 0.802\n",
      "Epoch: 3 \tTraining Loss: 0.446335 \tValidation Loss: 0.447352 \t accuracy: 0.802 \t accuracy2: 0.802\n",
      "Epoch: 3 \tTraining Loss: 0.452359 \tValidation Loss: 0.447842 \t accuracy: 0.802 \t accuracy2: 0.814\n",
      "Epoch: 3 \tTraining Loss: 0.446699 \tValidation Loss: 0.452368 \t accuracy: 0.797 \t accuracy2: 0.837\n",
      "Epoch: 3 \tTraining Loss: 0.461963 \tValidation Loss: 0.455027 \t accuracy: 0.801 \t accuracy2: 0.826\n",
      "Epoch: 3 \tTraining Loss: 0.450828 \tValidation Loss: 0.439313 \t accuracy: 0.807 \t accuracy2: 0.895\n",
      "Epoch: 3 \tTraining Loss: 0.444949 \tValidation Loss: 0.472661 \t accuracy: 0.785 \t accuracy2: 0.791\n",
      "Epoch: 3 \tTraining Loss: 0.460620 \tValidation Loss: 0.438897 \t accuracy: 0.804 \t accuracy2: 0.814\n",
      "Epoch: 3 \tTraining Loss: 0.455201 \tValidation Loss: 0.463010 \t accuracy: 0.793 \t accuracy2: 0.674\n",
      "Epoch: 3 \tTraining Loss: 0.465411 \tValidation Loss: 0.453613 \t accuracy: 0.801 \t accuracy2: 0.814\n",
      "Epoch: 3 \tTraining Loss: 0.442183 \tValidation Loss: 0.447087 \t accuracy: 0.798 \t accuracy2: 0.779\n",
      "Epoch: 4 \tTraining Loss: 0.262075 \tValidation Loss: 0.441802 \t accuracy: 0.804 \t accuracy2: 0.791\n",
      "Epoch: 4 \tTraining Loss: 0.437423 \tValidation Loss: 0.431981 \t accuracy: 0.808 \t accuracy2: 0.814\n",
      "Validation loss decreased (0.438671 --> 0.431981).  Saving model ...\n",
      "Epoch: 4 \tTraining Loss: 0.438502 \tValidation Loss: 0.461077 \t accuracy: 0.792 \t accuracy2: 0.733\n",
      "Epoch: 4 \tTraining Loss: 0.455365 \tValidation Loss: 0.444339 \t accuracy: 0.805 \t accuracy2: 0.826\n",
      "Epoch: 4 \tTraining Loss: 0.454640 \tValidation Loss: 0.463110 \t accuracy: 0.794 \t accuracy2: 0.895\n",
      "Epoch: 4 \tTraining Loss: 0.450821 \tValidation Loss: 0.454377 \t accuracy: 0.796 \t accuracy2: 0.826\n",
      "Epoch: 4 \tTraining Loss: 0.442566 \tValidation Loss: 0.438023 \t accuracy: 0.809 \t accuracy2: 0.756\n",
      "Epoch: 4 \tTraining Loss: 0.444194 \tValidation Loss: 0.441997 \t accuracy: 0.799 \t accuracy2: 0.791\n",
      "Epoch: 4 \tTraining Loss: 0.448588 \tValidation Loss: 0.437977 \t accuracy: 0.808 \t accuracy2: 0.721\n",
      "Epoch: 4 \tTraining Loss: 0.447466 \tValidation Loss: 0.443539 \t accuracy: 0.810 \t accuracy2: 0.802\n",
      "Epoch: 4 \tTraining Loss: 0.448446 \tValidation Loss: 0.443178 \t accuracy: 0.806 \t accuracy2: 0.814\n",
      "Epoch: 4 \tTraining Loss: 0.431443 \tValidation Loss: 0.440462 \t accuracy: 0.808 \t accuracy2: 0.826\n",
      "Epoch: 4 \tTraining Loss: 0.452367 \tValidation Loss: 0.433149 \t accuracy: 0.811 \t accuracy2: 0.779\n",
      "Epoch: 4 \tTraining Loss: 0.436427 \tValidation Loss: 0.443634 \t accuracy: 0.803 \t accuracy2: 0.767\n",
      "Epoch: 4 \tTraining Loss: 0.436158 \tValidation Loss: 0.441414 \t accuracy: 0.806 \t accuracy2: 0.814\n",
      "Epoch: 5 \tTraining Loss: 0.037801 \tValidation Loss: 0.442374 \t accuracy: 0.796 \t accuracy2: 0.791\n",
      "Epoch: 5 \tTraining Loss: 0.437637 \tValidation Loss: 0.442012 \t accuracy: 0.809 \t accuracy2: 0.721\n",
      "Epoch: 5 \tTraining Loss: 0.440722 \tValidation Loss: 0.443470 \t accuracy: 0.806 \t accuracy2: 0.837\n",
      "Epoch: 5 \tTraining Loss: 0.449424 \tValidation Loss: 0.441682 \t accuracy: 0.804 \t accuracy2: 0.860\n",
      "Epoch: 5 \tTraining Loss: 0.437810 \tValidation Loss: 0.449377 \t accuracy: 0.803 \t accuracy2: 0.744\n",
      "Epoch: 5 \tTraining Loss: 0.426645 \tValidation Loss: 0.434409 \t accuracy: 0.811 \t accuracy2: 0.837\n",
      "Epoch: 5 \tTraining Loss: 0.442331 \tValidation Loss: 0.441384 \t accuracy: 0.805 \t accuracy2: 0.814\n",
      "Epoch: 5 \tTraining Loss: 0.425968 \tValidation Loss: 0.434098 \t accuracy: 0.808 \t accuracy2: 0.826\n",
      "Epoch: 5 \tTraining Loss: 0.423227 \tValidation Loss: 0.444295 \t accuracy: 0.801 \t accuracy2: 0.802\n",
      "Epoch: 5 \tTraining Loss: 0.444795 \tValidation Loss: 0.463724 \t accuracy: 0.791 \t accuracy2: 0.779\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch: 5 \tTraining Loss: 0.446709 \tValidation Loss: 0.428721 \t accuracy: 0.813 \t accuracy2: 0.756\n",
      "Validation loss decreased (0.431981 --> 0.428721).  Saving model ...\n",
      "Epoch: 5 \tTraining Loss: 0.437467 \tValidation Loss: 0.431678 \t accuracy: 0.809 \t accuracy2: 0.802\n",
      "Epoch: 5 \tTraining Loss: 0.434492 \tValidation Loss: 0.427198 \t accuracy: 0.812 \t accuracy2: 0.756\n",
      "Validation loss decreased (0.428721 --> 0.427198).  Saving model ...\n",
      "Epoch: 5 \tTraining Loss: 0.424838 \tValidation Loss: 0.433434 \t accuracy: 0.809 \t accuracy2: 0.849\n",
      "Epoch: 5 \tTraining Loss: 0.439310 \tValidation Loss: 0.428479 \t accuracy: 0.815 \t accuracy2: 0.791\n",
      "Epoch: 5 \tTraining Loss: 0.430807 \tValidation Loss: 0.426225 \t accuracy: 0.811 \t accuracy2: 0.872\n",
      "Validation loss decreased (0.427198 --> 0.426225).  Saving model ...\n",
      "Epoch: 6 \tTraining Loss: 0.289173 \tValidation Loss: 0.446153 \t accuracy: 0.796 \t accuracy2: 0.802\n",
      "Epoch: 6 \tTraining Loss: 0.428761 \tValidation Loss: 0.425207 \t accuracy: 0.814 \t accuracy2: 0.849\n",
      "Validation loss decreased (0.426225 --> 0.425207).  Saving model ...\n",
      "Epoch: 6 \tTraining Loss: 0.441459 \tValidation Loss: 0.443974 \t accuracy: 0.806 \t accuracy2: 0.826\n",
      "Epoch: 6 \tTraining Loss: 0.447013 \tValidation Loss: 0.432074 \t accuracy: 0.809 \t accuracy2: 0.698\n",
      "Epoch: 6 \tTraining Loss: 0.432781 \tValidation Loss: 0.431598 \t accuracy: 0.808 \t accuracy2: 0.814\n",
      "Epoch: 6 \tTraining Loss: 0.433319 \tValidation Loss: 0.439615 \t accuracy: 0.806 \t accuracy2: 0.849\n",
      "Epoch: 6 \tTraining Loss: 0.433395 \tValidation Loss: 0.434251 \t accuracy: 0.808 \t accuracy2: 0.860\n",
      "Epoch: 6 \tTraining Loss: 0.434525 \tValidation Loss: 0.438943 \t accuracy: 0.807 \t accuracy2: 0.849\n",
      "Epoch: 6 \tTraining Loss: 0.427514 \tValidation Loss: 0.448744 \t accuracy: 0.803 \t accuracy2: 0.826\n",
      "Epoch: 6 \tTraining Loss: 0.440555 \tValidation Loss: 0.430452 \t accuracy: 0.812 \t accuracy2: 0.872\n",
      "Epoch: 6 \tTraining Loss: 0.432122 \tValidation Loss: 0.440455 \t accuracy: 0.811 \t accuracy2: 0.756\n",
      "Epoch: 6 \tTraining Loss: 0.429521 \tValidation Loss: 0.432967 \t accuracy: 0.812 \t accuracy2: 0.802\n",
      "Epoch: 6 \tTraining Loss: 0.434171 \tValidation Loss: 0.442940 \t accuracy: 0.805 \t accuracy2: 0.756\n",
      "Epoch: 6 \tTraining Loss: 0.435970 \tValidation Loss: 0.439775 \t accuracy: 0.804 \t accuracy2: 0.791\n",
      "Epoch: 6 \tTraining Loss: 0.426490 \tValidation Loss: 0.427206 \t accuracy: 0.814 \t accuracy2: 0.872\n",
      "Epoch: 7 \tTraining Loss: 0.058783 \tValidation Loss: 0.427774 \t accuracy: 0.813 \t accuracy2: 0.767\n",
      "Epoch: 7 \tTraining Loss: 0.424794 \tValidation Loss: 0.432182 \t accuracy: 0.813 \t accuracy2: 0.744\n",
      "Epoch: 7 \tTraining Loss: 0.434656 \tValidation Loss: 0.430341 \t accuracy: 0.814 \t accuracy2: 0.791\n",
      "Epoch: 7 \tTraining Loss: 0.433755 \tValidation Loss: 0.443057 \t accuracy: 0.803 \t accuracy2: 0.826\n",
      "Epoch: 7 \tTraining Loss: 0.430445 \tValidation Loss: 0.427920 \t accuracy: 0.813 \t accuracy2: 0.802\n",
      "Epoch: 7 \tTraining Loss: 0.427138 \tValidation Loss: 0.432424 \t accuracy: 0.811 \t accuracy2: 0.814\n",
      "Epoch: 7 \tTraining Loss: 0.441473 \tValidation Loss: 0.425324 \t accuracy: 0.815 \t accuracy2: 0.779\n",
      "Epoch: 7 \tTraining Loss: 0.425153 \tValidation Loss: 0.430019 \t accuracy: 0.809 \t accuracy2: 0.779\n",
      "Epoch: 7 \tTraining Loss: 0.430377 \tValidation Loss: 0.444886 \t accuracy: 0.800 \t accuracy2: 0.826\n",
      "Epoch: 7 \tTraining Loss: 0.426844 \tValidation Loss: 0.428881 \t accuracy: 0.811 \t accuracy2: 0.767\n",
      "Epoch: 7 \tTraining Loss: 0.428330 \tValidation Loss: 0.433652 \t accuracy: 0.807 \t accuracy2: 0.791\n",
      "Epoch: 7 \tTraining Loss: 0.424684 \tValidation Loss: 0.432498 \t accuracy: 0.807 \t accuracy2: 0.686\n",
      "Epoch: 7 \tTraining Loss: 0.416243 \tValidation Loss: 0.435902 \t accuracy: 0.807 \t accuracy2: 0.802\n",
      "Epoch: 7 \tTraining Loss: 0.426048 \tValidation Loss: 0.423591 \t accuracy: 0.818 \t accuracy2: 0.907\n",
      "Validation loss decreased (0.425207 --> 0.423591).  Saving model ...\n",
      "Epoch: 7 \tTraining Loss: 0.423739 \tValidation Loss: 0.427070 \t accuracy: 0.815 \t accuracy2: 0.872\n",
      "Epoch: 7 \tTraining Loss: 0.430533 \tValidation Loss: 0.430907 \t accuracy: 0.811 \t accuracy2: 0.814\n",
      "Epoch: 8 \tTraining Loss: 0.309695 \tValidation Loss: 0.433119 \t accuracy: 0.805 \t accuracy2: 0.849\n",
      "Epoch: 8 \tTraining Loss: 0.432057 \tValidation Loss: 0.432011 \t accuracy: 0.808 \t accuracy2: 0.849\n",
      "Epoch: 8 \tTraining Loss: 0.430119 \tValidation Loss: 0.433032 \t accuracy: 0.811 \t accuracy2: 0.872\n",
      "Epoch: 8 \tTraining Loss: 0.435170 \tValidation Loss: 0.424966 \t accuracy: 0.813 \t accuracy2: 0.779\n",
      "Epoch: 8 \tTraining Loss: 0.435185 \tValidation Loss: 0.445811 \t accuracy: 0.808 \t accuracy2: 0.814\n",
      "Epoch: 8 \tTraining Loss: 0.431225 \tValidation Loss: 0.425501 \t accuracy: 0.814 \t accuracy2: 0.826\n",
      "Epoch: 8 \tTraining Loss: 0.415263 \tValidation Loss: 0.420559 \t accuracy: 0.814 \t accuracy2: 0.849\n",
      "Validation loss decreased (0.423591 --> 0.420559).  Saving model ...\n",
      "Epoch: 8 \tTraining Loss: 0.425719 \tValidation Loss: 0.423557 \t accuracy: 0.812 \t accuracy2: 0.837\n",
      "Epoch: 8 \tTraining Loss: 0.423347 \tValidation Loss: 0.432651 \t accuracy: 0.810 \t accuracy2: 0.860\n",
      "Epoch: 8 \tTraining Loss: 0.426673 \tValidation Loss: 0.430184 \t accuracy: 0.813 \t accuracy2: 0.802\n",
      "Epoch: 8 \tTraining Loss: 0.421626 \tValidation Loss: 0.417251 \t accuracy: 0.818 \t accuracy2: 0.744\n",
      "Validation loss decreased (0.420559 --> 0.417251).  Saving model ...\n",
      "Epoch: 8 \tTraining Loss: 0.425861 \tValidation Loss: 0.420388 \t accuracy: 0.813 \t accuracy2: 0.733\n",
      "Epoch: 8 \tTraining Loss: 0.424164 \tValidation Loss: 0.423424 \t accuracy: 0.813 \t accuracy2: 0.733\n",
      "Epoch: 8 \tTraining Loss: 0.420874 \tValidation Loss: 0.428748 \t accuracy: 0.813 \t accuracy2: 0.767\n",
      "Epoch: 8 \tTraining Loss: 0.433163 \tValidation Loss: 0.423838 \t accuracy: 0.812 \t accuracy2: 0.802\n",
      "Epoch: 9 \tTraining Loss: 0.077269 \tValidation Loss: 0.442151 \t accuracy: 0.805 \t accuracy2: 0.791\n",
      "Epoch: 9 \tTraining Loss: 0.434826 \tValidation Loss: 0.433636 \t accuracy: 0.809 \t accuracy2: 0.802\n",
      "Epoch: 9 \tTraining Loss: 0.425983 \tValidation Loss: 0.425191 \t accuracy: 0.815 \t accuracy2: 0.756\n",
      "Epoch: 9 \tTraining Loss: 0.438526 \tValidation Loss: 0.429917 \t accuracy: 0.810 \t accuracy2: 0.860\n",
      "Epoch: 9 \tTraining Loss: 0.426541 \tValidation Loss: 0.423484 \t accuracy: 0.815 \t accuracy2: 0.814\n",
      "Epoch: 9 \tTraining Loss: 0.412043 \tValidation Loss: 0.415697 \t accuracy: 0.819 \t accuracy2: 0.837\n",
      "Validation loss decreased (0.417251 --> 0.415697).  Saving model ...\n",
      "Epoch: 9 \tTraining Loss: 0.414651 \tValidation Loss: 0.430392 \t accuracy: 0.808 \t accuracy2: 0.756\n",
      "Epoch: 9 \tTraining Loss: 0.427881 \tValidation Loss: 0.418884 \t accuracy: 0.816 \t accuracy2: 0.826\n",
      "Epoch: 9 \tTraining Loss: 0.419611 \tValidation Loss: 0.421802 \t accuracy: 0.816 \t accuracy2: 0.872\n",
      "Epoch: 9 \tTraining Loss: 0.422058 \tValidation Loss: 0.417010 \t accuracy: 0.819 \t accuracy2: 0.872\n",
      "Epoch: 9 \tTraining Loss: 0.418086 \tValidation Loss: 0.439858 \t accuracy: 0.801 \t accuracy2: 0.733\n",
      "Epoch: 9 \tTraining Loss: 0.427224 \tValidation Loss: 0.422346 \t accuracy: 0.815 \t accuracy2: 0.849\n",
      "Epoch: 9 \tTraining Loss: 0.419285 \tValidation Loss: 0.421380 \t accuracy: 0.814 \t accuracy2: 0.837\n",
      "Epoch: 9 \tTraining Loss: 0.421007 \tValidation Loss: 0.421854 \t accuracy: 0.817 \t accuracy2: 0.802\n",
      "Epoch: 9 \tTraining Loss: 0.414441 \tValidation Loss: 0.420981 \t accuracy: 0.815 \t accuracy2: 0.895\n",
      "Epoch: 9 \tTraining Loss: 0.432457 \tValidation Loss: 0.421439 \t accuracy: 0.816 \t accuracy2: 0.860\n",
      "Epoch: 10 \tTraining Loss: 0.332410 \tValidation Loss: 0.442037 \t accuracy: 0.800 \t accuracy2: 0.837\n",
      "Epoch: 10 \tTraining Loss: 0.427317 \tValidation Loss: 0.421979 \t accuracy: 0.811 \t accuracy2: 0.849\n",
      "Epoch: 10 \tTraining Loss: 0.423712 \tValidation Loss: 0.418655 \t accuracy: 0.817 \t accuracy2: 0.884\n",
      "Epoch: 10 \tTraining Loss: 0.426839 \tValidation Loss: 0.421731 \t accuracy: 0.815 \t accuracy2: 0.814\n",
      "Epoch: 10 \tTraining Loss: 0.428824 \tValidation Loss: 0.424849 \t accuracy: 0.813 \t accuracy2: 0.872\n",
      "Epoch: 10 \tTraining Loss: 0.417744 \tValidation Loss: 0.427941 \t accuracy: 0.815 \t accuracy2: 0.744\n",
      "Epoch: 10 \tTraining Loss: 0.414261 \tValidation Loss: 0.432450 \t accuracy: 0.811 \t accuracy2: 0.779\n",
      "Epoch: 10 \tTraining Loss: 0.424710 \tValidation Loss: 0.448095 \t accuracy: 0.810 \t accuracy2: 0.884\n",
      "Epoch: 10 \tTraining Loss: 0.420776 \tValidation Loss: 0.415129 \t accuracy: 0.818 \t accuracy2: 0.767\n",
      "Validation loss decreased (0.415697 --> 0.415129).  Saving model ...\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch: 10 \tTraining Loss: 0.419116 \tValidation Loss: 0.418303 \t accuracy: 0.817 \t accuracy2: 0.849\n",
      "Epoch: 10 \tTraining Loss: 0.420513 \tValidation Loss: 0.425940 \t accuracy: 0.814 \t accuracy2: 0.872\n",
      "Epoch: 10 \tTraining Loss: 0.418957 \tValidation Loss: 0.424531 \t accuracy: 0.816 \t accuracy2: 0.826\n",
      "Epoch: 10 \tTraining Loss: 0.421878 \tValidation Loss: 0.427856 \t accuracy: 0.813 \t accuracy2: 0.779\n",
      "Epoch: 10 \tTraining Loss: 0.413521 \tValidation Loss: 0.421417 \t accuracy: 0.818 \t accuracy2: 0.837\n",
      "Epoch: 10 \tTraining Loss: 0.431772 \tValidation Loss: 0.435906 \t accuracy: 0.805 \t accuracy2: 0.837\n",
      "Epoch: 11 \tTraining Loss: 0.100929 \tValidation Loss: 0.473808 \t accuracy: 0.783 \t accuracy2: 0.721\n",
      "Epoch: 11 \tTraining Loss: 0.423584 \tValidation Loss: 0.432423 \t accuracy: 0.810 \t accuracy2: 0.802\n",
      "Epoch: 11 \tTraining Loss: 0.429409 \tValidation Loss: 0.428479 \t accuracy: 0.814 \t accuracy2: 0.860\n",
      "Epoch: 11 \tTraining Loss: 0.429931 \tValidation Loss: 0.426566 \t accuracy: 0.814 \t accuracy2: 0.826\n",
      "Epoch: 11 \tTraining Loss: 0.418677 \tValidation Loss: 0.421845 \t accuracy: 0.814 \t accuracy2: 0.779\n",
      "Epoch: 11 \tTraining Loss: 0.420120 \tValidation Loss: 0.416693 \t accuracy: 0.818 \t accuracy2: 0.884\n",
      "Epoch: 11 \tTraining Loss: 0.423952 \tValidation Loss: 0.423915 \t accuracy: 0.814 \t accuracy2: 0.756\n",
      "Epoch: 11 \tTraining Loss: 0.427573 \tValidation Loss: 0.412533 \t accuracy: 0.820 \t accuracy2: 0.802\n",
      "Validation loss decreased (0.415129 --> 0.412533).  Saving model ...\n",
      "Epoch: 11 \tTraining Loss: 0.424745 \tValidation Loss: 0.423181 \t accuracy: 0.814 \t accuracy2: 0.837\n",
      "Epoch: 11 \tTraining Loss: 0.424826 \tValidation Loss: 0.420221 \t accuracy: 0.815 \t accuracy2: 0.826\n",
      "Epoch: 11 \tTraining Loss: 0.414494 \tValidation Loss: 0.424118 \t accuracy: 0.814 \t accuracy2: 0.826\n",
      "Epoch: 11 \tTraining Loss: 0.414662 \tValidation Loss: 0.421844 \t accuracy: 0.815 \t accuracy2: 0.767\n",
      "Epoch: 11 \tTraining Loss: 0.407123 \tValidation Loss: 0.420026 \t accuracy: 0.814 \t accuracy2: 0.767\n",
      "Epoch: 11 \tTraining Loss: 0.410182 \tValidation Loss: 0.421367 \t accuracy: 0.814 \t accuracy2: 0.767\n",
      "Epoch: 11 \tTraining Loss: 0.425736 \tValidation Loss: 0.424683 \t accuracy: 0.811 \t accuracy2: 0.814\n",
      "Epoch: 11 \tTraining Loss: 0.425183 \tValidation Loss: 0.438931 \t accuracy: 0.801 \t accuracy2: 0.802\n",
      "Epoch: 12 \tTraining Loss: 0.343924 \tValidation Loss: 0.424216 \t accuracy: 0.816 \t accuracy2: 0.791\n",
      "Epoch: 12 \tTraining Loss: 0.415911 \tValidation Loss: 0.424036 \t accuracy: 0.815 \t accuracy2: 0.733\n",
      "Epoch: 12 \tTraining Loss: 0.425189 \tValidation Loss: 0.426139 \t accuracy: 0.813 \t accuracy2: 0.814\n",
      "Epoch: 12 \tTraining Loss: 0.410664 \tValidation Loss: 0.414769 \t accuracy: 0.819 \t accuracy2: 0.779\n",
      "Epoch: 12 \tTraining Loss: 0.429369 \tValidation Loss: 0.418338 \t accuracy: 0.817 \t accuracy2: 0.756\n",
      "Epoch: 12 \tTraining Loss: 0.428222 \tValidation Loss: 0.423233 \t accuracy: 0.816 \t accuracy2: 0.814\n",
      "Epoch: 12 \tTraining Loss: 0.424525 \tValidation Loss: 0.429748 \t accuracy: 0.809 \t accuracy2: 0.872\n",
      "Epoch: 12 \tTraining Loss: 0.421070 \tValidation Loss: 0.417464 \t accuracy: 0.818 \t accuracy2: 0.837\n",
      "Epoch: 12 \tTraining Loss: 0.406687 \tValidation Loss: 0.417439 \t accuracy: 0.818 \t accuracy2: 0.756\n",
      "Epoch: 12 \tTraining Loss: 0.412680 \tValidation Loss: 0.424173 \t accuracy: 0.817 \t accuracy2: 0.779\n",
      "Epoch: 12 \tTraining Loss: 0.423590 \tValidation Loss: 0.416551 \t accuracy: 0.817 \t accuracy2: 0.884\n",
      "Epoch: 12 \tTraining Loss: 0.415494 \tValidation Loss: 0.429428 \t accuracy: 0.812 \t accuracy2: 0.767\n",
      "Epoch: 12 \tTraining Loss: 0.409063 \tValidation Loss: 0.421085 \t accuracy: 0.815 \t accuracy2: 0.837\n",
      "Epoch: 12 \tTraining Loss: 0.423750 \tValidation Loss: 0.454626 \t accuracy: 0.799 \t accuracy2: 0.767\n",
      "Epoch: 12 \tTraining Loss: 0.425040 \tValidation Loss: 0.420636 \t accuracy: 0.817 \t accuracy2: 0.791\n",
      "Epoch: 13 \tTraining Loss: 0.117816 \tValidation Loss: 0.457916 \t accuracy: 0.804 \t accuracy2: 0.837\n",
      "Epoch: 13 \tTraining Loss: 0.422259 \tValidation Loss: 0.455185 \t accuracy: 0.790 \t accuracy2: 0.767\n",
      "Epoch: 13 \tTraining Loss: 0.415489 \tValidation Loss: 0.422886 \t accuracy: 0.817 \t accuracy2: 0.767\n",
      "Epoch: 13 \tTraining Loss: 0.417439 \tValidation Loss: 0.437252 \t accuracy: 0.816 \t accuracy2: 0.860\n",
      "Epoch: 13 \tTraining Loss: 0.433287 \tValidation Loss: 0.426224 \t accuracy: 0.810 \t accuracy2: 0.779\n",
      "Epoch: 13 \tTraining Loss: 0.420419 \tValidation Loss: 0.417623 \t accuracy: 0.818 \t accuracy2: 0.826\n",
      "Epoch: 13 \tTraining Loss: 0.431791 \tValidation Loss: 0.415314 \t accuracy: 0.820 \t accuracy2: 0.826\n",
      "Epoch: 13 \tTraining Loss: 0.427960 \tValidation Loss: 0.435097 \t accuracy: 0.803 \t accuracy2: 0.814\n",
      "Epoch: 13 \tTraining Loss: 0.404235 \tValidation Loss: 0.425816 \t accuracy: 0.816 \t accuracy2: 0.826\n",
      "Epoch: 13 \tTraining Loss: 0.418378 \tValidation Loss: 0.420052 \t accuracy: 0.819 \t accuracy2: 0.826\n",
      "Epoch: 13 \tTraining Loss: 0.406131 \tValidation Loss: 0.431408 \t accuracy: 0.809 \t accuracy2: 0.779\n",
      "Epoch: 13 \tTraining Loss: 0.416545 \tValidation Loss: 0.426864 \t accuracy: 0.813 \t accuracy2: 0.767\n",
      "Epoch: 13 \tTraining Loss: 0.430617 \tValidation Loss: 0.415926 \t accuracy: 0.818 \t accuracy2: 0.826\n",
      "Epoch: 13 \tTraining Loss: 0.423590 \tValidation Loss: 0.416496 \t accuracy: 0.819 \t accuracy2: 0.791\n",
      "Epoch: 13 \tTraining Loss: 0.417571 \tValidation Loss: 0.415224 \t accuracy: 0.817 \t accuracy2: 0.767\n",
      "Epoch: 13 \tTraining Loss: 0.419167 \tValidation Loss: 0.411430 \t accuracy: 0.819 \t accuracy2: 0.744\n",
      "Validation loss decreased (0.412533 --> 0.411430).  Saving model ...\n",
      "Epoch: 14 \tTraining Loss: 0.368306 \tValidation Loss: 0.437144 \t accuracy: 0.812 \t accuracy2: 0.872\n",
      "Epoch: 14 \tTraining Loss: 0.427161 \tValidation Loss: 0.414556 \t accuracy: 0.819 \t accuracy2: 0.814\n",
      "Epoch: 14 \tTraining Loss: 0.417461 \tValidation Loss: 0.417230 \t accuracy: 0.821 \t accuracy2: 0.872\n",
      "Epoch: 14 \tTraining Loss: 0.411556 \tValidation Loss: 0.419293 \t accuracy: 0.817 \t accuracy2: 0.872\n",
      "Epoch: 14 \tTraining Loss: 0.425989 \tValidation Loss: 0.417529 \t accuracy: 0.817 \t accuracy2: 0.872\n",
      "Epoch: 14 \tTraining Loss: 0.404916 \tValidation Loss: 0.413971 \t accuracy: 0.820 \t accuracy2: 0.756\n",
      "Epoch: 14 \tTraining Loss: 0.413952 \tValidation Loss: 0.413632 \t accuracy: 0.821 \t accuracy2: 0.860\n",
      "Epoch: 14 \tTraining Loss: 0.421527 \tValidation Loss: 0.421432 \t accuracy: 0.816 \t accuracy2: 0.802\n",
      "Epoch: 14 \tTraining Loss: 0.423022 \tValidation Loss: 0.426184 \t accuracy: 0.809 \t accuracy2: 0.802\n",
      "Epoch: 14 \tTraining Loss: 0.425662 \tValidation Loss: 0.418021 \t accuracy: 0.816 \t accuracy2: 0.837\n",
      "Epoch: 14 \tTraining Loss: 0.412984 \tValidation Loss: 0.409306 \t accuracy: 0.820 \t accuracy2: 0.779\n",
      "Validation loss decreased (0.411430 --> 0.409306).  Saving model ...\n",
      "Epoch: 14 \tTraining Loss: 0.419686 \tValidation Loss: 0.430180 \t accuracy: 0.810 \t accuracy2: 0.756\n",
      "Epoch: 14 \tTraining Loss: 0.414423 \tValidation Loss: 0.413804 \t accuracy: 0.817 \t accuracy2: 0.837\n",
      "Epoch: 14 \tTraining Loss: 0.416212 \tValidation Loss: 0.424613 \t accuracy: 0.819 \t accuracy2: 0.802\n",
      "Epoch: 14 \tTraining Loss: 0.424260 \tValidation Loss: 0.425353 \t accuracy: 0.814 \t accuracy2: 0.814\n",
      "Epoch: 15 \tTraining Loss: 0.143502 \tValidation Loss: 0.442210 \t accuracy: 0.808 \t accuracy2: 0.837\n",
      "Epoch: 15 \tTraining Loss: 0.419230 \tValidation Loss: 0.422798 \t accuracy: 0.816 \t accuracy2: 0.860\n",
      "Epoch: 15 \tTraining Loss: 0.422978 \tValidation Loss: 0.448960 \t accuracy: 0.806 \t accuracy2: 0.826\n",
      "Epoch: 15 \tTraining Loss: 0.426864 \tValidation Loss: 0.423130 \t accuracy: 0.817 \t accuracy2: 0.779\n",
      "Epoch: 15 \tTraining Loss: 0.427474 \tValidation Loss: 0.418350 \t accuracy: 0.816 \t accuracy2: 0.791\n",
      "Epoch: 15 \tTraining Loss: 0.429803 \tValidation Loss: 0.431177 \t accuracy: 0.814 \t accuracy2: 0.640\n",
      "Epoch: 15 \tTraining Loss: 0.406937 \tValidation Loss: 0.432025 \t accuracy: 0.809 \t accuracy2: 0.860\n",
      "Epoch: 15 \tTraining Loss: 0.407431 \tValidation Loss: 0.426031 \t accuracy: 0.813 \t accuracy2: 0.826\n",
      "Epoch: 15 \tTraining Loss: 0.410188 \tValidation Loss: 0.415326 \t accuracy: 0.821 \t accuracy2: 0.837\n",
      "Epoch: 15 \tTraining Loss: 0.408037 \tValidation Loss: 0.409244 \t accuracy: 0.824 \t accuracy2: 0.802\n",
      "Validation loss decreased (0.409306 --> 0.409244).  Saving model ...\n",
      "Epoch: 15 \tTraining Loss: 0.410716 \tValidation Loss: 0.413913 \t accuracy: 0.821 \t accuracy2: 0.779\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch: 15 \tTraining Loss: 0.422770 \tValidation Loss: 0.432242 \t accuracy: 0.812 \t accuracy2: 0.779\n",
      "Epoch: 15 \tTraining Loss: 0.414686 \tValidation Loss: 0.418622 \t accuracy: 0.820 \t accuracy2: 0.837\n",
      "Epoch: 15 \tTraining Loss: 0.421328 \tValidation Loss: 0.410179 \t accuracy: 0.822 \t accuracy2: 0.837\n",
      "Epoch: 15 \tTraining Loss: 0.406703 \tValidation Loss: 0.419129 \t accuracy: 0.817 \t accuracy2: 0.802\n",
      "Epoch: 15 \tTraining Loss: 0.422126 \tValidation Loss: 0.425768 \t accuracy: 0.810 \t accuracy2: 0.802\n",
      "Epoch: 16 \tTraining Loss: 0.388895 \tValidation Loss: 0.423932 \t accuracy: 0.816 \t accuracy2: 0.756\n",
      "Epoch: 16 \tTraining Loss: 0.410999 \tValidation Loss: 0.411781 \t accuracy: 0.820 \t accuracy2: 0.814\n",
      "Epoch: 16 \tTraining Loss: 0.417018 \tValidation Loss: 0.420277 \t accuracy: 0.816 \t accuracy2: 0.849\n",
      "Epoch: 16 \tTraining Loss: 0.409177 \tValidation Loss: 0.424807 \t accuracy: 0.819 \t accuracy2: 0.802\n",
      "Epoch: 16 \tTraining Loss: 0.415021 \tValidation Loss: 0.414923 \t accuracy: 0.819 \t accuracy2: 0.826\n",
      "Epoch: 16 \tTraining Loss: 0.401121 \tValidation Loss: 0.417121 \t accuracy: 0.820 \t accuracy2: 0.814\n",
      "Epoch: 16 \tTraining Loss: 0.418257 \tValidation Loss: 0.421120 \t accuracy: 0.819 \t accuracy2: 0.814\n",
      "Epoch: 16 \tTraining Loss: 0.407630 \tValidation Loss: 0.408281 \t accuracy: 0.824 \t accuracy2: 0.837\n",
      "Validation loss decreased (0.409244 --> 0.408281).  Saving model ...\n",
      "Epoch: 16 \tTraining Loss: 0.414322 \tValidation Loss: 0.425123 \t accuracy: 0.812 \t accuracy2: 0.791\n",
      "Epoch: 16 \tTraining Loss: 0.419391 \tValidation Loss: 0.410794 \t accuracy: 0.820 \t accuracy2: 0.767\n",
      "Epoch: 16 \tTraining Loss: 0.413093 \tValidation Loss: 0.411734 \t accuracy: 0.820 \t accuracy2: 0.802\n",
      "Epoch: 16 \tTraining Loss: 0.424130 \tValidation Loss: 0.425040 \t accuracy: 0.817 \t accuracy2: 0.814\n",
      "Epoch: 16 \tTraining Loss: 0.411588 \tValidation Loss: 0.421779 \t accuracy: 0.816 \t accuracy2: 0.744\n",
      "Epoch: 16 \tTraining Loss: 0.418149 \tValidation Loss: 0.406985 \t accuracy: 0.821 \t accuracy2: 0.826\n",
      "Validation loss decreased (0.408281 --> 0.406985).  Saving model ...\n",
      "Epoch: 16 \tTraining Loss: 0.415756 \tValidation Loss: 0.419516 \t accuracy: 0.813 \t accuracy2: 0.814\n",
      "Epoch: 17 \tTraining Loss: 0.154812 \tValidation Loss: 0.414995 \t accuracy: 0.826 \t accuracy2: 0.791\n",
      "Epoch: 17 \tTraining Loss: 0.423889 \tValidation Loss: 0.430853 \t accuracy: 0.814 \t accuracy2: 0.802\n",
      "Epoch: 17 \tTraining Loss: 0.413441 \tValidation Loss: 0.419251 \t accuracy: 0.817 \t accuracy2: 0.860\n",
      "Epoch: 17 \tTraining Loss: 0.423619 \tValidation Loss: 0.412779 \t accuracy: 0.824 \t accuracy2: 0.826\n",
      "Epoch: 17 \tTraining Loss: 0.409750 \tValidation Loss: 0.408361 \t accuracy: 0.822 \t accuracy2: 0.791\n",
      "Epoch: 17 \tTraining Loss: 0.408380 \tValidation Loss: 0.412533 \t accuracy: 0.825 \t accuracy2: 0.884\n",
      "Epoch: 17 \tTraining Loss: 0.415212 \tValidation Loss: 0.418422 \t accuracy: 0.820 \t accuracy2: 0.767\n",
      "Epoch: 17 \tTraining Loss: 0.414771 \tValidation Loss: 0.423608 \t accuracy: 0.819 \t accuracy2: 0.860\n",
      "Epoch: 17 \tTraining Loss: 0.402842 \tValidation Loss: 0.416391 \t accuracy: 0.821 \t accuracy2: 0.756\n",
      "Epoch: 17 \tTraining Loss: 0.405998 \tValidation Loss: 0.413657 \t accuracy: 0.821 \t accuracy2: 0.814\n",
      "Epoch: 17 \tTraining Loss: 0.411733 \tValidation Loss: 0.418605 \t accuracy: 0.816 \t accuracy2: 0.837\n",
      "Epoch: 17 \tTraining Loss: 0.404649 \tValidation Loss: 0.420384 \t accuracy: 0.820 \t accuracy2: 0.802\n",
      "Epoch: 17 \tTraining Loss: 0.418183 \tValidation Loss: 0.419458 \t accuracy: 0.817 \t accuracy2: 0.814\n",
      "Epoch: 17 \tTraining Loss: 0.411010 \tValidation Loss: 0.410075 \t accuracy: 0.819 \t accuracy2: 0.779\n",
      "Epoch: 17 \tTraining Loss: 0.407068 \tValidation Loss: 0.406450 \t accuracy: 0.823 \t accuracy2: 0.767\n",
      "Validation loss decreased (0.406985 --> 0.406450).  Saving model ...\n",
      "Epoch: 17 \tTraining Loss: 0.420563 \tValidation Loss: 0.424211 \t accuracy: 0.812 \t accuracy2: 0.860\n",
      "Epoch: 18 \tTraining Loss: 0.456661 \tValidation Loss: 0.477918 \t accuracy: 0.780 \t accuracy2: 0.791\n",
      "Epoch: 18 \tTraining Loss: 0.443604 \tValidation Loss: 0.424771 \t accuracy: 0.815 \t accuracy2: 0.895\n",
      "Epoch: 18 \tTraining Loss: 0.428557 \tValidation Loss: 0.439925 \t accuracy: 0.816 \t accuracy2: 0.872\n",
      "Epoch: 18 \tTraining Loss: 0.420134 \tValidation Loss: 0.431725 \t accuracy: 0.817 \t accuracy2: 0.872\n",
      "Epoch: 18 \tTraining Loss: 0.418029 \tValidation Loss: 0.414425 \t accuracy: 0.820 \t accuracy2: 0.802\n",
      "Epoch: 18 \tTraining Loss: 0.401647 \tValidation Loss: 0.417875 \t accuracy: 0.819 \t accuracy2: 0.860\n",
      "Epoch: 18 \tTraining Loss: 0.415016 \tValidation Loss: 0.411907 \t accuracy: 0.823 \t accuracy2: 0.826\n",
      "Epoch: 18 \tTraining Loss: 0.409754 \tValidation Loss: 0.414001 \t accuracy: 0.823 \t accuracy2: 0.826\n",
      "Epoch: 18 \tTraining Loss: 0.414883 \tValidation Loss: 0.413416 \t accuracy: 0.822 \t accuracy2: 0.767\n",
      "Epoch: 18 \tTraining Loss: 0.411007 \tValidation Loss: 0.427284 \t accuracy: 0.811 \t accuracy2: 0.791\n",
      "Epoch: 18 \tTraining Loss: 0.412141 \tValidation Loss: 0.413859 \t accuracy: 0.820 \t accuracy2: 0.802\n",
      "Epoch: 18 \tTraining Loss: 0.409505 \tValidation Loss: 0.406372 \t accuracy: 0.824 \t accuracy2: 0.756\n",
      "Validation loss decreased (0.406450 --> 0.406372).  Saving model ...\n",
      "Epoch: 18 \tTraining Loss: 0.409437 \tValidation Loss: 0.433016 \t accuracy: 0.805 \t accuracy2: 0.791\n",
      "Epoch: 18 \tTraining Loss: 0.430531 \tValidation Loss: 0.428644 \t accuracy: 0.812 \t accuracy2: 0.884\n",
      "Epoch: 18 \tTraining Loss: 0.413983 \tValidation Loss: 0.413350 \t accuracy: 0.820 \t accuracy2: 0.814\n",
      "Epoch: 19 \tTraining Loss: 0.183526 \tValidation Loss: 0.425552 \t accuracy: 0.814 \t accuracy2: 0.779\n",
      "Epoch: 19 \tTraining Loss: 0.441994 \tValidation Loss: 0.426684 \t accuracy: 0.817 \t accuracy2: 0.860\n",
      "Epoch: 19 \tTraining Loss: 0.411806 \tValidation Loss: 0.425116 \t accuracy: 0.811 \t accuracy2: 0.837\n",
      "Epoch: 19 \tTraining Loss: 0.415152 \tValidation Loss: 0.425508 \t accuracy: 0.816 \t accuracy2: 0.814\n",
      "Epoch: 19 \tTraining Loss: 0.419966 \tValidation Loss: 0.411299 \t accuracy: 0.824 \t accuracy2: 0.860\n",
      "Epoch: 19 \tTraining Loss: 0.419780 \tValidation Loss: 0.408279 \t accuracy: 0.824 \t accuracy2: 0.826\n",
      "Epoch: 19 \tTraining Loss: 0.420654 \tValidation Loss: 0.417878 \t accuracy: 0.817 \t accuracy2: 0.802\n",
      "Epoch: 19 \tTraining Loss: 0.418435 \tValidation Loss: 0.412199 \t accuracy: 0.821 \t accuracy2: 0.802\n",
      "Epoch: 19 \tTraining Loss: 0.402760 \tValidation Loss: 0.415232 \t accuracy: 0.820 \t accuracy2: 0.779\n",
      "Epoch: 19 \tTraining Loss: 0.409236 \tValidation Loss: 0.412676 \t accuracy: 0.818 \t accuracy2: 0.802\n",
      "Epoch: 19 \tTraining Loss: 0.413818 \tValidation Loss: 0.415054 \t accuracy: 0.818 \t accuracy2: 0.826\n",
      "Epoch: 19 \tTraining Loss: 0.408352 \tValidation Loss: 0.415331 \t accuracy: 0.818 \t accuracy2: 0.791\n",
      "Epoch: 19 \tTraining Loss: 0.399742 \tValidation Loss: 0.406032 \t accuracy: 0.825 \t accuracy2: 0.814\n",
      "Validation loss decreased (0.406372 --> 0.406032).  Saving model ...\n",
      "Epoch: 19 \tTraining Loss: 0.415512 \tValidation Loss: 0.424002 \t accuracy: 0.817 \t accuracy2: 0.849\n",
      "Epoch: 19 \tTraining Loss: 0.401137 \tValidation Loss: 0.407416 \t accuracy: 0.823 \t accuracy2: 0.849\n",
      "Epoch: 19 \tTraining Loss: 0.413420 \tValidation Loss: 0.428706 \t accuracy: 0.810 \t accuracy2: 0.849\n",
      "Epoch: 20 \tTraining Loss: 0.454502 \tValidation Loss: 0.451161 \t accuracy: 0.803 \t accuracy2: 0.791\n",
      "Epoch: 20 \tTraining Loss: 0.436742 \tValidation Loss: 0.441885 \t accuracy: 0.807 \t accuracy2: 0.756\n",
      "Epoch: 20 \tTraining Loss: 0.432529 \tValidation Loss: 0.415250 \t accuracy: 0.820 \t accuracy2: 0.884\n",
      "Epoch: 20 \tTraining Loss: 0.416317 \tValidation Loss: 0.412905 \t accuracy: 0.817 \t accuracy2: 0.849\n",
      "Epoch: 20 \tTraining Loss: 0.411354 \tValidation Loss: 0.410046 \t accuracy: 0.820 \t accuracy2: 0.814\n",
      "Epoch: 20 \tTraining Loss: 0.405843 \tValidation Loss: 0.419863 \t accuracy: 0.818 \t accuracy2: 0.767\n",
      "Epoch: 20 \tTraining Loss: 0.401539 \tValidation Loss: 0.415131 \t accuracy: 0.822 \t accuracy2: 0.884\n",
      "Epoch: 20 \tTraining Loss: 0.400665 \tValidation Loss: 0.411223 \t accuracy: 0.823 \t accuracy2: 0.884\n",
      "Epoch: 20 \tTraining Loss: 0.412159 \tValidation Loss: 0.407567 \t accuracy: 0.825 \t accuracy2: 0.767\n",
      "Epoch: 20 \tTraining Loss: 0.408025 \tValidation Loss: 0.409555 \t accuracy: 0.820 \t accuracy2: 0.791\n",
      "Epoch: 20 \tTraining Loss: 0.411633 \tValidation Loss: 0.405426 \t accuracy: 0.823 \t accuracy2: 0.872\n",
      "Validation loss decreased (0.406032 --> 0.405426).  Saving model ...\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch: 20 \tTraining Loss: 0.415104 \tValidation Loss: 0.412152 \t accuracy: 0.820 \t accuracy2: 0.791\n",
      "Epoch: 20 \tTraining Loss: 0.405531 \tValidation Loss: 0.409649 \t accuracy: 0.826 \t accuracy2: 0.837\n",
      "Epoch: 20 \tTraining Loss: 0.423502 \tValidation Loss: 0.419099 \t accuracy: 0.814 \t accuracy2: 0.872\n",
      "Epoch: 20 \tTraining Loss: 0.413726 \tValidation Loss: 0.406720 \t accuracy: 0.824 \t accuracy2: 0.872\n",
      "Epoch: 21 \tTraining Loss: 0.191788 \tValidation Loss: 0.414143 \t accuracy: 0.820 \t accuracy2: 0.826\n",
      "Epoch: 21 \tTraining Loss: 0.418570 \tValidation Loss: 0.411426 \t accuracy: 0.820 \t accuracy2: 0.791\n",
      "Epoch: 21 \tTraining Loss: 0.407138 \tValidation Loss: 0.437286 \t accuracy: 0.803 \t accuracy2: 0.802\n",
      "Epoch: 21 \tTraining Loss: 0.408891 \tValidation Loss: 0.401619 \t accuracy: 0.828 \t accuracy2: 0.779\n",
      "Validation loss decreased (0.405426 --> 0.401619).  Saving model ...\n",
      "Epoch: 21 \tTraining Loss: 0.406758 \tValidation Loss: 0.416079 \t accuracy: 0.818 \t accuracy2: 0.802\n",
      "Epoch: 21 \tTraining Loss: 0.405757 \tValidation Loss: 0.407872 \t accuracy: 0.821 \t accuracy2: 0.767\n",
      "Epoch: 21 \tTraining Loss: 0.422104 \tValidation Loss: 0.406822 \t accuracy: 0.824 \t accuracy2: 0.791\n",
      "Epoch: 21 \tTraining Loss: 0.400504 \tValidation Loss: 0.418229 \t accuracy: 0.816 \t accuracy2: 0.767\n",
      "Epoch: 21 \tTraining Loss: 0.412095 \tValidation Loss: 0.442547 \t accuracy: 0.802 \t accuracy2: 0.860\n",
      "Epoch: 21 \tTraining Loss: 0.414501 \tValidation Loss: 0.415358 \t accuracy: 0.820 \t accuracy2: 0.872\n",
      "Epoch: 21 \tTraining Loss: 0.411743 \tValidation Loss: 0.404124 \t accuracy: 0.826 \t accuracy2: 0.872\n",
      "Epoch: 21 \tTraining Loss: 0.408882 \tValidation Loss: 0.410711 \t accuracy: 0.824 \t accuracy2: 0.791\n",
      "Epoch: 21 \tTraining Loss: 0.409445 \tValidation Loss: 0.423020 \t accuracy: 0.814 \t accuracy2: 0.779\n",
      "Epoch: 21 \tTraining Loss: 0.409961 \tValidation Loss: 0.411290 \t accuracy: 0.822 \t accuracy2: 0.791\n",
      "Epoch: 21 \tTraining Loss: 0.420499 \tValidation Loss: 0.416417 \t accuracy: 0.818 \t accuracy2: 0.837\n",
      "Epoch: 21 \tTraining Loss: 0.421572 \tValidation Loss: 0.408937 \t accuracy: 0.824 \t accuracy2: 0.802\n",
      "Epoch: 22 \tTraining Loss: 0.459881 \tValidation Loss: 0.427079 \t accuracy: 0.813 \t accuracy2: 0.826\n",
      "Epoch: 22 \tTraining Loss: 0.403578 \tValidation Loss: 0.415180 \t accuracy: 0.823 \t accuracy2: 0.756\n",
      "Epoch: 22 \tTraining Loss: 0.424917 \tValidation Loss: 0.424532 \t accuracy: 0.811 \t accuracy2: 0.837\n",
      "Epoch: 22 \tTraining Loss: 0.420256 \tValidation Loss: 0.413326 \t accuracy: 0.820 \t accuracy2: 0.860\n",
      "Epoch: 22 \tTraining Loss: 0.409098 \tValidation Loss: 0.411274 \t accuracy: 0.822 \t accuracy2: 0.837\n",
      "Epoch: 22 \tTraining Loss: 0.418413 \tValidation Loss: 0.410585 \t accuracy: 0.820 \t accuracy2: 0.826\n",
      "Epoch: 22 \tTraining Loss: 0.413012 \tValidation Loss: 0.415000 \t accuracy: 0.818 \t accuracy2: 0.802\n",
      "Epoch: 22 \tTraining Loss: 0.398099 \tValidation Loss: 0.409745 \t accuracy: 0.822 \t accuracy2: 0.837\n",
      "Epoch: 22 \tTraining Loss: 0.411485 \tValidation Loss: 0.404646 \t accuracy: 0.825 \t accuracy2: 0.860\n",
      "Epoch: 22 \tTraining Loss: 0.409413 \tValidation Loss: 0.416775 \t accuracy: 0.820 \t accuracy2: 0.802\n",
      "Epoch: 22 \tTraining Loss: 0.414786 \tValidation Loss: 0.406633 \t accuracy: 0.825 \t accuracy2: 0.895\n",
      "Epoch: 22 \tTraining Loss: 0.400729 \tValidation Loss: 0.410480 \t accuracy: 0.821 \t accuracy2: 0.756\n",
      "Epoch: 22 \tTraining Loss: 0.415374 \tValidation Loss: 0.415572 \t accuracy: 0.817 \t accuracy2: 0.826\n",
      "Epoch: 22 \tTraining Loss: 0.417277 \tValidation Loss: 0.428173 \t accuracy: 0.815 \t accuracy2: 0.756\n",
      "Epoch: 22 \tTraining Loss: 0.411427 \tValidation Loss: 0.434657 \t accuracy: 0.804 \t accuracy2: 0.837\n",
      "Epoch: 23 \tTraining Loss: 0.236410 \tValidation Loss: 0.469186 \t accuracy: 0.789 \t accuracy2: 0.802\n",
      "Epoch: 23 \tTraining Loss: 0.440978 \tValidation Loss: 0.434922 \t accuracy: 0.809 \t accuracy2: 0.872\n",
      "Epoch: 23 \tTraining Loss: 0.413567 \tValidation Loss: 0.416915 \t accuracy: 0.821 \t accuracy2: 0.872\n",
      "Epoch: 23 \tTraining Loss: 0.408589 \tValidation Loss: 0.414391 \t accuracy: 0.821 \t accuracy2: 0.826\n",
      "Epoch: 23 \tTraining Loss: 0.389197 \tValidation Loss: 0.423967 \t accuracy: 0.815 \t accuracy2: 0.767\n",
      "Epoch: 23 \tTraining Loss: 0.411788 \tValidation Loss: 0.413727 \t accuracy: 0.824 \t accuracy2: 0.837\n",
      "Epoch: 23 \tTraining Loss: 0.414521 \tValidation Loss: 0.406357 \t accuracy: 0.825 \t accuracy2: 0.860\n",
      "Epoch: 23 \tTraining Loss: 0.407812 \tValidation Loss: 0.407296 \t accuracy: 0.825 \t accuracy2: 0.837\n",
      "Epoch: 23 \tTraining Loss: 0.410348 \tValidation Loss: 0.409884 \t accuracy: 0.822 \t accuracy2: 0.814\n",
      "Epoch: 23 \tTraining Loss: 0.416469 \tValidation Loss: 0.413440 \t accuracy: 0.823 \t accuracy2: 0.837\n",
      "Epoch: 23 \tTraining Loss: 0.405902 \tValidation Loss: 0.418369 \t accuracy: 0.823 \t accuracy2: 0.779\n",
      "Epoch: 23 \tTraining Loss: 0.414090 \tValidation Loss: 0.419672 \t accuracy: 0.817 \t accuracy2: 0.779\n",
      "Epoch: 23 \tTraining Loss: 0.410896 \tValidation Loss: 0.408914 \t accuracy: 0.821 \t accuracy2: 0.837\n",
      "Epoch: 23 \tTraining Loss: 0.419610 \tValidation Loss: 0.423269 \t accuracy: 0.818 \t accuracy2: 0.837\n",
      "Epoch: 23 \tTraining Loss: 0.423664 \tValidation Loss: 0.431130 \t accuracy: 0.810 \t accuracy2: 0.814\n",
      "Epoch: 23 \tTraining Loss: 0.421629 \tValidation Loss: 0.419453 \t accuracy: 0.817 \t accuracy2: 0.791\n",
      "Epoch: 24 \tTraining Loss: 0.508109 \tValidation Loss: 0.491676 \t accuracy: 0.774 \t accuracy2: 0.837\n",
      "Epoch: 24 \tTraining Loss: 0.446346 \tValidation Loss: 0.417196 \t accuracy: 0.817 \t accuracy2: 0.802\n",
      "Epoch: 24 \tTraining Loss: 0.419297 \tValidation Loss: 0.410039 \t accuracy: 0.820 \t accuracy2: 0.767\n",
      "Epoch: 24 \tTraining Loss: 0.416547 \tValidation Loss: 0.416322 \t accuracy: 0.819 \t accuracy2: 0.802\n",
      "Epoch: 24 \tTraining Loss: 0.406064 \tValidation Loss: 0.408021 \t accuracy: 0.823 \t accuracy2: 0.872\n",
      "Epoch: 24 \tTraining Loss: 0.410460 \tValidation Loss: 0.410532 \t accuracy: 0.820 \t accuracy2: 0.907\n",
      "Epoch: 24 \tTraining Loss: 0.412600 \tValidation Loss: 0.408108 \t accuracy: 0.826 \t accuracy2: 0.826\n",
      "Epoch: 24 \tTraining Loss: 0.405960 \tValidation Loss: 0.405541 \t accuracy: 0.825 \t accuracy2: 0.837\n",
      "Epoch: 24 \tTraining Loss: 0.406911 \tValidation Loss: 0.420223 \t accuracy: 0.819 \t accuracy2: 0.814\n",
      "Epoch: 24 \tTraining Loss: 0.425485 \tValidation Loss: 0.406638 \t accuracy: 0.825 \t accuracy2: 0.884\n",
      "Epoch: 24 \tTraining Loss: 0.406222 \tValidation Loss: 0.404800 \t accuracy: 0.824 \t accuracy2: 0.756\n",
      "Epoch: 24 \tTraining Loss: 0.395927 \tValidation Loss: 0.408813 \t accuracy: 0.819 \t accuracy2: 0.849\n",
      "Epoch: 24 \tTraining Loss: 0.422867 \tValidation Loss: 0.415754 \t accuracy: 0.818 \t accuracy2: 0.837\n",
      "Epoch: 24 \tTraining Loss: 0.409811 \tValidation Loss: 0.413978 \t accuracy: 0.819 \t accuracy2: 0.791\n",
      "Epoch: 24 \tTraining Loss: 0.406551 \tValidation Loss: 0.421008 \t accuracy: 0.817 \t accuracy2: 0.779\n",
      "Epoch: 25 \tTraining Loss: 0.234884 \tValidation Loss: 0.418904 \t accuracy: 0.820 \t accuracy2: 0.802\n",
      "Epoch: 25 \tTraining Loss: 0.402586 \tValidation Loss: 0.408388 \t accuracy: 0.823 \t accuracy2: 0.849\n",
      "Epoch: 25 \tTraining Loss: 0.408878 \tValidation Loss: 0.409264 \t accuracy: 0.823 \t accuracy2: 0.698\n",
      "Epoch: 25 \tTraining Loss: 0.415978 \tValidation Loss: 0.421487 \t accuracy: 0.816 \t accuracy2: 0.849\n",
      "Epoch: 25 \tTraining Loss: 0.414352 \tValidation Loss: 0.414862 \t accuracy: 0.818 \t accuracy2: 0.837\n",
      "Epoch: 25 \tTraining Loss: 0.412363 \tValidation Loss: 0.412439 \t accuracy: 0.819 \t accuracy2: 0.802\n",
      "Epoch: 25 \tTraining Loss: 0.411260 \tValidation Loss: 0.412964 \t accuracy: 0.825 \t accuracy2: 0.884\n",
      "Epoch: 25 \tTraining Loss: 0.414176 \tValidation Loss: 0.405699 \t accuracy: 0.823 \t accuracy2: 0.849\n",
      "Epoch: 25 \tTraining Loss: 0.417286 \tValidation Loss: 0.401788 \t accuracy: 0.825 \t accuracy2: 0.767\n",
      "Epoch: 25 \tTraining Loss: 0.400117 \tValidation Loss: 0.406620 \t accuracy: 0.824 \t accuracy2: 0.779\n",
      "Epoch: 25 \tTraining Loss: 0.408444 \tValidation Loss: 0.429956 \t accuracy: 0.817 \t accuracy2: 0.826\n",
      "Epoch: 25 \tTraining Loss: 0.411711 \tValidation Loss: 0.401524 \t accuracy: 0.826 \t accuracy2: 0.779\n",
      "Validation loss decreased (0.401619 --> 0.401524).  Saving model ...\n",
      "Epoch: 25 \tTraining Loss: 0.404845 \tValidation Loss: 0.402160 \t accuracy: 0.825 \t accuracy2: 0.849\n",
      "Epoch: 25 \tTraining Loss: 0.398849 \tValidation Loss: 0.402764 \t accuracy: 0.824 \t accuracy2: 0.826\n",
      "Epoch: 25 \tTraining Loss: 0.398189 \tValidation Loss: 0.414088 \t accuracy: 0.824 \t accuracy2: 0.826\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch: 25 \tTraining Loss: 0.401838 \tValidation Loss: 0.417370 \t accuracy: 0.813 \t accuracy2: 0.837\n",
      "Epoch: 26 \tTraining Loss: 0.474512 \tValidation Loss: 0.408295 \t accuracy: 0.821 \t accuracy2: 0.791\n",
      "Epoch: 26 \tTraining Loss: 0.399640 \tValidation Loss: 0.399209 \t accuracy: 0.827 \t accuracy2: 0.837\n",
      "Validation loss decreased (0.401524 --> 0.399209).  Saving model ...\n",
      "Epoch: 26 \tTraining Loss: 0.390627 \tValidation Loss: 0.398933 \t accuracy: 0.827 \t accuracy2: 0.802\n",
      "Validation loss decreased (0.399209 --> 0.398933).  Saving model ...\n",
      "Epoch: 26 \tTraining Loss: 0.387417 \tValidation Loss: 0.396092 \t accuracy: 0.830 \t accuracy2: 0.826\n",
      "Validation loss decreased (0.398933 --> 0.396092).  Saving model ...\n",
      "Epoch: 26 \tTraining Loss: 0.394424 \tValidation Loss: 0.395092 \t accuracy: 0.829 \t accuracy2: 0.802\n",
      "Validation loss decreased (0.396092 --> 0.395092).  Saving model ...\n",
      "Epoch: 26 \tTraining Loss: 0.396027 \tValidation Loss: 0.394577 \t accuracy: 0.829 \t accuracy2: 0.872\n",
      "Validation loss decreased (0.395092 --> 0.394577).  Saving model ...\n",
      "Epoch: 26 \tTraining Loss: 0.388198 \tValidation Loss: 0.395099 \t accuracy: 0.828 \t accuracy2: 0.837\n",
      "Epoch: 26 \tTraining Loss: 0.385194 \tValidation Loss: 0.394937 \t accuracy: 0.828 \t accuracy2: 0.779\n",
      "Epoch: 26 \tTraining Loss: 0.381103 \tValidation Loss: 0.393406 \t accuracy: 0.829 \t accuracy2: 0.860\n",
      "Validation loss decreased (0.394577 --> 0.393406).  Saving model ...\n",
      "Epoch: 26 \tTraining Loss: 0.379826 \tValidation Loss: 0.394357 \t accuracy: 0.828 \t accuracy2: 0.872\n",
      "Epoch: 26 \tTraining Loss: 0.391597 \tValidation Loss: 0.394092 \t accuracy: 0.829 \t accuracy2: 0.872\n",
      "Epoch: 26 \tTraining Loss: 0.387823 \tValidation Loss: 0.394992 \t accuracy: 0.829 \t accuracy2: 0.814\n",
      "Epoch: 26 \tTraining Loss: 0.385167 \tValidation Loss: 0.393121 \t accuracy: 0.829 \t accuracy2: 0.802\n",
      "Validation loss decreased (0.393406 --> 0.393121).  Saving model ...\n",
      "Epoch: 26 \tTraining Loss: 0.382782 \tValidation Loss: 0.393860 \t accuracy: 0.829 \t accuracy2: 0.860\n",
      "Epoch: 26 \tTraining Loss: 0.382323 \tValidation Loss: 0.394872 \t accuracy: 0.829 \t accuracy2: 0.860\n",
      "Epoch: 27 \tTraining Loss: 0.244970 \tValidation Loss: 0.404221 \t accuracy: 0.825 \t accuracy2: 0.779\n",
      "Epoch: 27 \tTraining Loss: 0.380188 \tValidation Loss: 0.392653 \t accuracy: 0.830 \t accuracy2: 0.919\n",
      "Validation loss decreased (0.393121 --> 0.392653).  Saving model ...\n",
      "Epoch: 27 \tTraining Loss: 0.383773 \tValidation Loss: 0.393632 \t accuracy: 0.829 \t accuracy2: 0.849\n",
      "Epoch: 27 \tTraining Loss: 0.388689 \tValidation Loss: 0.392155 \t accuracy: 0.830 \t accuracy2: 0.849\n",
      "Validation loss decreased (0.392653 --> 0.392155).  Saving model ...\n",
      "Epoch: 27 \tTraining Loss: 0.390320 \tValidation Loss: 0.392196 \t accuracy: 0.830 \t accuracy2: 0.860\n",
      "Epoch: 27 \tTraining Loss: 0.382013 \tValidation Loss: 0.396892 \t accuracy: 0.828 \t accuracy2: 0.872\n",
      "Epoch: 27 \tTraining Loss: 0.387585 \tValidation Loss: 0.392652 \t accuracy: 0.830 \t accuracy2: 0.872\n",
      "Epoch: 27 \tTraining Loss: 0.378530 \tValidation Loss: 0.392563 \t accuracy: 0.830 \t accuracy2: 0.860\n",
      "Epoch: 27 \tTraining Loss: 0.387440 \tValidation Loss: 0.393503 \t accuracy: 0.830 \t accuracy2: 0.802\n",
      "Epoch: 27 \tTraining Loss: 0.382613 \tValidation Loss: 0.392511 \t accuracy: 0.830 \t accuracy2: 0.814\n",
      "Epoch: 27 \tTraining Loss: 0.376855 \tValidation Loss: 0.391810 \t accuracy: 0.830 \t accuracy2: 0.849\n",
      "Validation loss decreased (0.392155 --> 0.391810).  Saving model ...\n",
      "Epoch: 27 \tTraining Loss: 0.386057 \tValidation Loss: 0.391938 \t accuracy: 0.830 \t accuracy2: 0.860\n",
      "Epoch: 27 \tTraining Loss: 0.391621 \tValidation Loss: 0.392062 \t accuracy: 0.830 \t accuracy2: 0.779\n",
      "Epoch: 27 \tTraining Loss: 0.383906 \tValidation Loss: 0.392098 \t accuracy: 0.831 \t accuracy2: 0.907\n",
      "Epoch: 27 \tTraining Loss: 0.387383 \tValidation Loss: 0.390800 \t accuracy: 0.831 \t accuracy2: 0.791\n",
      "Validation loss decreased (0.391810 --> 0.390800).  Saving model ...\n",
      "Epoch: 28 \tTraining Loss: 0.018135 \tValidation Loss: 0.389476 \t accuracy: 0.830 \t accuracy2: 0.884\n",
      "Validation loss decreased (0.390800 --> 0.389476).  Saving model ...\n",
      "Epoch: 28 \tTraining Loss: 0.370556 \tValidation Loss: 0.391941 \t accuracy: 0.831 \t accuracy2: 0.860\n",
      "Epoch: 28 \tTraining Loss: 0.380551 \tValidation Loss: 0.393331 \t accuracy: 0.829 \t accuracy2: 0.779\n",
      "Epoch: 28 \tTraining Loss: 0.380722 \tValidation Loss: 0.391373 \t accuracy: 0.831 \t accuracy2: 0.802\n",
      "Epoch: 28 \tTraining Loss: 0.382395 \tValidation Loss: 0.392665 \t accuracy: 0.831 \t accuracy2: 0.849\n",
      "Epoch: 28 \tTraining Loss: 0.384942 \tValidation Loss: 0.391637 \t accuracy: 0.831 \t accuracy2: 0.872\n",
      "Epoch: 28 \tTraining Loss: 0.385787 \tValidation Loss: 0.392098 \t accuracy: 0.831 \t accuracy2: 0.849\n",
      "Epoch: 28 \tTraining Loss: 0.384253 \tValidation Loss: 0.391528 \t accuracy: 0.831 \t accuracy2: 0.837\n",
      "Epoch: 28 \tTraining Loss: 0.384685 \tValidation Loss: 0.392721 \t accuracy: 0.830 \t accuracy2: 0.756\n",
      "Epoch: 28 \tTraining Loss: 0.393011 \tValidation Loss: 0.390996 \t accuracy: 0.831 \t accuracy2: 0.895\n",
      "Epoch: 28 \tTraining Loss: 0.394738 \tValidation Loss: 0.391066 \t accuracy: 0.831 \t accuracy2: 0.837\n",
      "Epoch: 28 \tTraining Loss: 0.381204 \tValidation Loss: 0.392297 \t accuracy: 0.831 \t accuracy2: 0.814\n",
      "Epoch: 28 \tTraining Loss: 0.375139 \tValidation Loss: 0.390860 \t accuracy: 0.831 \t accuracy2: 0.733\n",
      "Epoch: 28 \tTraining Loss: 0.383209 \tValidation Loss: 0.392740 \t accuracy: 0.830 \t accuracy2: 0.826\n",
      "Epoch: 28 \tTraining Loss: 0.383257 \tValidation Loss: 0.390862 \t accuracy: 0.831 \t accuracy2: 0.826\n",
      "Epoch: 28 \tTraining Loss: 0.381363 \tValidation Loss: 0.390156 \t accuracy: 0.832 \t accuracy2: 0.860\n",
      "Epoch: 29 \tTraining Loss: 0.257292 \tValidation Loss: 0.398318 \t accuracy: 0.826 \t accuracy2: 0.826\n",
      "Epoch: 29 \tTraining Loss: 0.376335 \tValidation Loss: 0.391144 \t accuracy: 0.831 \t accuracy2: 0.837\n",
      "Epoch: 29 \tTraining Loss: 0.387246 \tValidation Loss: 0.390415 \t accuracy: 0.832 \t accuracy2: 0.872\n",
      "Epoch: 29 \tTraining Loss: 0.390638 \tValidation Loss: 0.389718 \t accuracy: 0.832 \t accuracy2: 0.814\n",
      "Epoch: 29 \tTraining Loss: 0.372058 \tValidation Loss: 0.393143 \t accuracy: 0.830 \t accuracy2: 0.756\n",
      "Epoch: 29 \tTraining Loss: 0.377737 \tValidation Loss: 0.392305 \t accuracy: 0.831 \t accuracy2: 0.849\n",
      "Epoch: 29 \tTraining Loss: 0.379150 \tValidation Loss: 0.390304 \t accuracy: 0.832 \t accuracy2: 0.826\n",
      "Epoch: 29 \tTraining Loss: 0.382371 \tValidation Loss: 0.394199 \t accuracy: 0.829 \t accuracy2: 0.814\n",
      "Epoch: 29 \tTraining Loss: 0.378883 \tValidation Loss: 0.390612 \t accuracy: 0.831 \t accuracy2: 0.791\n",
      "Epoch: 29 \tTraining Loss: 0.381827 \tValidation Loss: 0.392046 \t accuracy: 0.830 \t accuracy2: 0.884\n",
      "Epoch: 29 \tTraining Loss: 0.388683 \tValidation Loss: 0.389842 \t accuracy: 0.832 \t accuracy2: 0.884\n",
      "Epoch: 29 \tTraining Loss: 0.388371 \tValidation Loss: 0.391141 \t accuracy: 0.830 \t accuracy2: 0.791\n",
      "Epoch: 29 \tTraining Loss: 0.376583 \tValidation Loss: 0.390005 \t accuracy: 0.832 \t accuracy2: 0.837\n",
      "Epoch: 29 \tTraining Loss: 0.387298 \tValidation Loss: 0.390631 \t accuracy: 0.831 \t accuracy2: 0.791\n",
      "Epoch: 29 \tTraining Loss: 0.384668 \tValidation Loss: 0.390722 \t accuracy: 0.830 \t accuracy2: 0.872\n",
      "Epoch: 30 \tTraining Loss: 0.038129 \tValidation Loss: 0.387553 \t accuracy: 0.831 \t accuracy2: 0.884\n",
      "Validation loss decreased (0.389476 --> 0.387553).  Saving model ...\n",
      "Epoch: 30 \tTraining Loss: 0.374926 \tValidation Loss: 0.390597 \t accuracy: 0.831 \t accuracy2: 0.826\n",
      "Epoch: 30 \tTraining Loss: 0.379791 \tValidation Loss: 0.391134 \t accuracy: 0.831 \t accuracy2: 0.767\n",
      "Epoch: 30 \tTraining Loss: 0.384231 \tValidation Loss: 0.393066 \t accuracy: 0.831 \t accuracy2: 0.826\n"
     ]
    }
   ],
   "source": [
    "# number of epochs to train the model\n",
    "from torch.optim import lr_scheduler \n",
    "n_epochs = 100 # you may increase this number to train a final model\n",
    "print_every = 50\n",
    "valid_loss_min = np.Inf # track change in validation loss\n",
    "steps = 0\n",
    "sched = lr_scheduler.StepLR(optimizer, step_size = 25, gamma=0.1)\n",
    "for epoch in range(1, n_epochs+1):\n",
    "\n",
    "    # keep track of training and validation loss\n",
    "    train_loss = 0.0\n",
    "    valid_loss = 0.0\n",
    "    \n",
    "    ###################\n",
    "    # train the model #\n",
    "    ###################\n",
    "    model = model.to(device)\n",
    "    sched.step()\n",
    "    model.train()\n",
    "    valid_loss = 0       \n",
    "    train_loss = 0\n",
    "    for data, target in train_loader:\n",
    "        steps += 1\n",
    "        #print(steps)\n",
    "        # move tensors to GPU if CUDA is available\n",
    "        \n",
    "        data, target = data.to(device), target.to(device)\n",
    "        \n",
    "        # clear the gradients of all optimized variables\n",
    "        optimizer.zero_grad()\n",
    "        # forward pass: compute predicted outputs by passing inputs to the model\n",
    "        output = model(data)\n",
    "        # calculate the batch loss\n",
    "        loss = criterion(output, target)\n",
    "        train_loss += loss.item()\n",
    "        # backward pass: compute gradient of the loss with respect to model parameters\n",
    "        loss.backward()\n",
    "        # perform a single optimization step (parameter update)\n",
    "        optimizer.step()\n",
    "        # update training loss\n",
    "        \n",
    "        \n",
    "    ######################    \n",
    "    # validate the model #\n",
    "    ######################\n",
    "        accuracy = 0\n",
    "        equalss = 0\n",
    "        counter = 0\n",
    "        if steps % print_every == 0:\n",
    "            model.eval()\n",
    "            \n",
    "            for data, target in valid_loader:\n",
    "            # move tensors to GPU if CUDA is available\n",
    "           \n",
    "                data, target = data.to(device), target.to(device)\n",
    "            # forward pass: compute predicted outputs by passing inputs to the model\n",
    "                output = model(data)\n",
    "            # calculate the batch loss\n",
    "                loss = criterion(output, target)\n",
    "            # update average validation loss \n",
    "                valid_loss += loss.item()\n",
    "                ps = torch.exp(output)\n",
    "                if target.data[counter] == ps.max(1)[1][counter]:\n",
    "                    equalss += 1\n",
    "                equality = (target.data == ps.max(1)[1])\n",
    "                accuracy += equality.type_as(torch.FloatTensor()).mean()\n",
    "                    \n",
    "                counter += 1\n",
    "                    \n",
    "    # calculate average losses\n",
    "            train_loss = train_loss/(print_every)\n",
    "            valid_loss = valid_loss/len(valid_loader)\n",
    "            accuracy_actual = accuracy/len(valid_loader)\n",
    "            accuracy_2_actual = equalss/len(valid_loader)\n",
    "    # print training/validation statistics \n",
    "            print('Epoch: {} \\tTraining Loss: {:.6f} \\tValidation Loss: {:.6f} \\t accuracy: {:.3f} \\t accuracy2: {:.3f}'.format(\n",
    "                epoch, train_loss, valid_loss, accuracy_actual, accuracy_2_actual))\n",
    "    \n",
    "    # save model if validation loss has decreased\n",
    "            if valid_loss <= valid_loss_min:\n",
    "                print('Validation loss decreased ({:.6f} --> {:.6f}).  Saving model ...'.format(\n",
    "                valid_loss_min,\n",
    "                valid_loss))\n",
    "                torch.save(model.state_dict(), 'histo_cancer_model.pth')\n",
    "                valid_loss_min = valid_loss\n",
    "        \n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
